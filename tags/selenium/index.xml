<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Selenium on TARUN LALWANI</title>
    <link>http://tarunlalwani.com/tags/selenium/</link>
    <description>Recent content in Selenium on TARUN LALWANI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://tarunlalwani.com/tags/selenium/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Re-using existing browser session in Selenium using C#</title>
      <link>http://tarunlalwani.com/post/reusing-existing-browser-session-selenium-csharp/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tarunlalwani.com/post/reusing-existing-browser-session-selenium-csharp/</guid>
      <description>Earlier I wrote an article on how to re-use a session in Selenium using Java. @Jim Hazen asked if the I could provide the implementation of same in C#. So here it is
The first time I worked out this approach was in C# only, but that was back in 2014. That time I copied code from the Selenium source code and modified it. This makes upgrading Selenium version difficult.</description>
    </item>
    
    <item>
      <title>Selenium disable popup blocker in different browsers</title>
      <link>http://tarunlalwani.com/post/selenium-disable-popup-blocker-different-browsers/</link>
      <pubDate>Thu, 01 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tarunlalwani.com/post/selenium-disable-popup-blocker-different-browsers/</guid>
      <description>Some testing scenarios requires that the Popup blocking be disabled. In this article we will look at ways for disabling popup blocker for different browser
Disabling Popup blocker in InternetExplorer This can be done by setting a registry setting.
from _winreg import * def set_popupblocker_status(enabled): key = OpenKey(HKEY_CURRENT_USER, r&amp;quot;Software\Microsoft\Internet Explorer\New Windows&amp;quot;, 0, KEY_ALL_ACCESS) SetValueEx(key, &amp;quot;PopupMgr&amp;quot;, 0, REG_SZ, enabled) CloseKey(key) set_popupblocker_status(&amp;quot;no&amp;quot;)  Disabling Popup blocker in Firefox For firefox, this can be done using a preference setting dom.</description>
    </item>
    
    <item>
      <title>Re-using existing browser session in Selenium using Java</title>
      <link>http://tarunlalwani.com/post/reusing-existing-browser-session-selenium-java/</link>
      <pubDate>Wed, 31 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tarunlalwani.com/post/reusing-existing-browser-session-selenium-java/</guid>
      <description>Yesterday I wrote an article on how to re-use a session in Selenium using Python. @Aditya Baraskar asked if the same was possible in Java.
Once you know the concepts, languages usually is no barrier. So I tried using the same approach that we did in Python and see how it works out in Java
Attempt 1 ChromeDriver driver = new ChromeDriver(); HttpCommandExecutor executor = (HttpCommandExecutor) driver.getCommandExecutor(); URL url = executor.</description>
    </item>
    
    <item>
      <title>Re-using existing browser session in selenium</title>
      <link>http://tarunlalwani.com/post/reusing-existing-browser-session-selenium/</link>
      <pubDate>Tue, 30 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tarunlalwani.com/post/reusing-existing-browser-session-selenium/</guid>
      <description>Comparison between Selenium and UFT Behavior For those of us who come from a QTP/UFT background, being able to test the same browser after a disconnect is usually a piece of cake
1. systemutil.run &amp;quot;iexplore.exe&amp;quot; 2. x = 2/0 3. Browser(&amp;quot;index:=0&amp;quot;).navigate (&amp;quot;http://www.google.com&amp;quot;)  If we run the above script in QTP/UFT, the script will error out on Line #2 and we can re-run the script from Line #3 and it would still work and navigate inside the browser we had opened earlier.</description>
    </item>
    
    <item>
      <title>Selenium disable Image loading in different browsers</title>
      <link>http://tarunlalwani.com/post/selenium-disable-image-loading-different-browsers/</link>
      <pubDate>Mon, 29 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tarunlalwani.com/post/selenium-disable-image-loading-different-browsers/</guid>
      <description>Sometimes during testing or scraping a website, we are not interested in loading the images on the page. Disabling images helps up speed up the page load times and make execution faster.
Even if we are interested in knowing the location (source) of images, we can still disable loading of all the images in GUI. In Selenium each browser requires different techniques to do so. We will look at each one of them one by one</description>
    </item>
    
    <item>
      <title>Selenium change User-Agent of different browsers</title>
      <link>http://tarunlalwani.com/post/selenium-change-user-agent-different-browsers/</link>
      <pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tarunlalwani.com/post/selenium-change-user-agent-different-browsers/</guid>
      <description>Server uses User-Agent string to differentiate between different browsers and devices. Each device + browser combination can have a different name to identify the Browser and its version. Thougth that may not be 100% true in all cases.
In this article we will see how to change the user-agent of different browser when automating them using Selenium
Changing User-Agent in Internet Explorer Unfortunately there is no good way to change the User-Agent of a IE browser.</description>
    </item>
    
  </channel>
</rss>